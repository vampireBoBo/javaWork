1、如果controller接收的是一个实体对象  
	@RequestMapping(value = "/updateInfo", method = RequestMethod.POST)
	@ResponseBody
	public void updateUserEntity(UserEntity userEntity,HttpServletResponse response , HttpServletRequest request){
   则jsp请求为：
	$("#btnSubmit").on('click',function(){
		$("#inputForm").isValid(function(){
			$.post('<%=request.getContextPath() %>/spring/userCheck/updateInfo',$("#inputForm").serializeArray(),function(){
				location.href = '<%=request.getContextPath()%>/spring/userCheck/userInfoFind';
			});
		});
	});
2、如果controller获取方式为流的方式
	String jsonBody = IOUtils.toString(request.getInputStream(),"utf-8"); 
   则jsp请求为：
	$.ajax({
            type:"POST",//提交数据的类型 POST GET
            url:url,  //提交的网址据
	        data:JSON.stringify( {
	        	"name": $("#name").val()
	        	} 
	        ), 
            //返回数据的格式
            contentType:"application/json; charset=UTF-8",
            dataType: "json",//"xml", "html", "script", "json", "jsonp", "text".
            //成功返回之后调用的函数             
            success:function(data){
            	
            } ,
            //调用出错执行的函数
            error: function(XMLHttpRequest, textStatus, errorThrown){
            	
            }                 
         });
3、如果controller接收的是HttpEntity类
	public void addDraft(HttpEntity<DisposeApply> disposeApply) throws Exception{
		// 获取提交的主表数据
		DisposeApply disposeApplyInfo = disposeApply.getBody();
		String jsonBody = JSON.toJSONString(disposeApplyInfo);
		JSONObject jobject = JSONObject.parseObject(jsonBody);
	}
   则jsp请求为：
	$.ajax({
            type:"POST",//提交数据的类型 POST GET
            url:url,  //提交的网址据
	        data:JSON.stringify( {
	               	'support_orgEmail' : $("#support_orgEmail").val(),	
	        	} 
	        ), 
            //返回数据的格式
            contentType:"application/json; charset=UTF-8",
            dataType: "json",
            //成功返回之后调用的函数             
            success:function(data){
            	
            } ,
            //调用出错执行的函数
            error: function(XMLHttpRequest, textStatus, errorThrown){
            	
            }                 
         });